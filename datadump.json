[{"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "logs", "model": "entry"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "logs", "model": "topic"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "logs", "model": "link"}}, {"model": "sessions.session", "pk": "29e7ibx5naodlsrpe5tf8zbg1or6kqcc", "fields": {"session_data": "YzljNTE1MDAxMmVlZDMxMzEzZDI5MmU5Mjg0ZTM5Y2ExZGYzY2M1NDp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ZTY0MTk4ZDE1YTRkNTkxMjBiYzhkYTkxN2VkMDg3ZWVmY2E0YzJhIn0=", "expire_date": "2019-04-11T03:19:12.489Z"}}, {"model": "sessions.session", "pk": "5hgwynygp6iwkdo0q02vy5f945x99cel", "fields": {"session_data": "YzljNTE1MDAxMmVlZDMxMzEzZDI5MmU5Mjg0ZTM5Y2ExZGYzY2M1NDp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI4ZTY0MTk4ZDE1YTRkNTkxMjBiYzhkYTkxN2VkMDg3ZWVmY2E0YzJhIn0=", "expire_date": "2019-04-09T07:53:30.174Z"}}, {"model": "sessions.session", "pk": "fyv99zmse4nsxd4f6veno8711uvnwpk0", "fields": {"session_data": "MmU1ODM3NWVkMTM1NWZiZTIwZGQyNzBjMWUyZmIyODRlMDY3OGIwMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjNTdiOWEyOWU0MGUzZDAxZGMzZGZkZTI5YzQyY2M0ODdjOGI4Mzk3In0=", "expire_date": "2019-04-08T03:07:44.070Z"}}, {"model": "sessions.session", "pk": "wnp72maooi2ekh0ei2semzzmsnrk9idb", "fields": {"session_data": "MmU1ODM3NWVkMTM1NWZiZTIwZGQyNzBjMWUyZmIyODRlMDY3OGIwMDp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJjNTdiOWEyOWU0MGUzZDAxZGMzZGZkZTI5YzQyY2M0ODdjOGI4Mzk3In0=", "expire_date": "2019-04-08T07:49:37.648Z"}}, {"model": "logs.topic", "pk": 1, "fields": {"title": "Week 1 - CLI/Git/Github", "date_added": "2019-03-25T07:51:22.818Z"}}, {"model": "logs.topic", "pk": 2, "fields": {"title": "Week 2 - Python Basics", "date_added": "2019-03-25T07:51:41.145Z"}}, {"model": "logs.topic", "pk": 3, "fields": {"title": "Week 3 - More Python", "date_added": "2019-03-25T07:51:46.148Z"}}, {"model": "logs.topic", "pk": 4, "fields": {"title": "Week 4 - HTML/CSS/Bootstrap", "date_added": "2019-03-25T07:51:50.658Z"}}, {"model": "logs.topic", "pk": 5, "fields": {"title": "Week 5 - postgres/SQL/API", "date_added": "2019-03-25T07:52:11.444Z"}}, {"model": "logs.topic", "pk": 6, "fields": {"title": "Week 6 - Django", "date_added": "2019-03-25T07:53:00.596Z"}}, {"model": "logs.topic", "pk": 7, "fields": {"title": "Ubud - Yoga", "date_added": "2019-03-25T08:18:54.183Z"}}, {"model": "logs.topic", "pk": 8, "fields": {"title": "Ubud - Restaurant", "date_added": "2019-03-25T08:19:02.175Z"}}, {"model": "logs.topic", "pk": 9, "fields": {"title": "Ubud - Trips", "date_added": "2019-03-25T08:50:32.919Z"}}, {"model": "logs.topic", "pk": 10, "fields": {"title": "Resources", "date_added": "2019-03-25T08:50:44.261Z"}}, {"model": "logs.topic", "pk": 11, "fields": {"title": "Ubud - Clubs", "date_added": "2019-03-27T12:06:13.603Z"}}, {"model": "logs.topic", "pk": 12, "fields": {"title": "Visa", "date_added": "2019-03-27T12:12:11.400Z"}}, {"model": "logs.topic", "pk": 13, "fields": {"title": "week 7 - Group Project", "date_added": "2019-03-29T01:02:57.732Z"}}, {"model": "logs.entry", "pk": 1, "fields": {"topic": 1, "date_added": "2019-03-25T07:54:21.022Z", "text": "Terminal\r\n** Command Lines **\r\n\r\n*go to directory*\r\n\r\n$ cd ~/desktop\r\n  \r\n$ cd ..\r\n\r\n$ cd -\r\n\r\n*to list what's in the current folder*\r\n\r\n$ ls -alrt (or l in Zshell)\r\n\r\n$ ls -rthl\r\n\r\n*to make a new folder*\r\n\r\n$ mkdir <folder_name>\r\n\r\n*to create a new file*\r\n\r\n$ touch <file_name>\r\n\r\n*to write into a file (add to the end)*\r\n\r\n$ echo \"xxx\" >> <file_name>\r\n\r\n*to write into a file (overwrite)*\r\n\r\n$ echo \"xxx\" > <file_name>\r\n\r\n*to copy file and name it file_name2*\r\n\r\n$ cp <file_name> <file_name2>\r\n\r\n*to delete a folder permenantly (be careful with -rf!)*\r\n\r\n$ rm -rf <folder_name>\r\n\r\n*to delete an empty folder *\r\n\r\n$ rmdir <folder_name>\r\n\r\n*to delete a file *\r\n\r\n$ rm <file_name>\r\n\r\n*to move a file or rename*\r\n\r\n$ mv <file_name> <file_name2>\r\n\r\n*to print working directory - know where you are*\r\n\r\n$ pwd\r\n\r\n*to search for a string*\r\n\r\n$ grep --color -i \"xx\"\r\n\r\n*to look for the manual*\r\n\r\n$ man <command>"}}, {"model": "logs.entry", "pk": 2, "fields": {"topic": 1, "date_added": "2019-03-25T07:55:14.167Z", "text": "working with vim\r\n\r\n$ vim <file_name>\r\n\r\nenter \"i\" to insert\r\n\r\nto save and quit -> esc + :wq <file_name>\r\n\r\nto force quit -> esc + :q!"}}, {"model": "logs.entry", "pk": 3, "fields": {"topic": 1, "date_added": "2019-03-25T07:55:36.961Z", "text": "*To write an terminal exec file, start with this line, where \"shabang\" means find the executable.*\r\n\r\n$ #!/bin/bash\r\n\r\n* To run the file in Terminal\r\n\r\n$ bash <file_name>\r\n\r\n*To make it executable, must make sure \"r w x\" has the x turned on*\r\n\r\n 2^2 = 4    r = read\r\n \r\n 2^1 = 2    w = write\r\n \r\n 2^0 = 1    x = execute\r\n \r\n*so a file that is rwx = 7, rx = 5, x = 1, r = 4(read only)...concept of binary*"}}, {"model": "logs.entry", "pk": 4, "fields": {"topic": 1, "date_added": "2019-03-25T07:56:13.362Z", "text": "**Git & GitHub**\r\n\r\n$ git init\r\n\r\n$ git status\r\n\r\n$ git remote add origin http://.... (origin could be any name)\r\n\r\n$ git remote -v\r\n\r\n$ git branch -v\r\n\r\n$ git push -u <remote_name> <branch_name> (origin master)\r\n\r\n$ git add <file_name>\r\n\r\n$ git -rm -cached <file_name>\r\n\r\n$ git commit -m \"xxx\"\r\n\r\n$ git pull <remote_name> <branch_name> http://.... (origin master)\r\n\r\n*It is possible to have more than one remote,e.g. pull from github/codingnomads and push to github/personal*\r\n\r\n*Don't create git folders inside other git folders*\r\n\r\n-----\r\n1. Pull from codingnomads to incorporate the new change in README.md\r\n\r\n$ git pull origin master\r\n\r\nPull from mingyyy to incorporate new changes in learned_concepts\r\n\r\n$ git pull ming master\r\n\r\n* There might be a vim window opens to ask for comments of the merge. \r\n* Change the comments or leave it (default), esc + :wq to continue\r\n\r\n2. we can hide some files in .gitignore, so they won't be pushed to GitHub"}}, {"model": "logs.entry", "pk": 5, "fields": {"topic": 1, "date_added": "2019-03-25T07:58:21.214Z", "text": "PyCharm\r\n\r\nPyCharm: *have project structure, python consol, terminal and others \r\n\r\n*Alt + the line, so you can change all of them at once\r\n*select something, right click, refactor and rename it\r\n\r\n1. Change the apparence under Pycharm -> Preference\r\n2. shift + shift: to search\r\n3. alt + select same words in different lines, then all these can be changed\r\n4. ctrl + shift + r, first time to run the program\r\n5. ctrl + r, aftr running for the first time\r\n6. command + b, check definition (docstring)"}}, {"model": "logs.entry", "pk": 6, "fields": {"topic": 7, "date_added": "2019-03-25T08:19:23.270Z", "text": "1. Yoga Center\r\n2. Yoga Barn"}}, {"model": "logs.entry", "pk": 7, "fields": {"topic": 8, "date_added": "2019-03-25T08:19:53.042Z", "text": "Vegan\r\n\r\n1. Sage\r\n2. Mother"}}, {"model": "logs.entry", "pk": 8, "fields": {"topic": 8, "date_added": "2019-03-25T08:30:47.665Z", "text": "Cheap Places\r\n1. Mama Warung\r\n2. Bridge Padang\r\n3. Be Pasih Seafood"}}, {"model": "logs.entry", "pk": 9, "fields": {"topic": 2, "date_added": "2019-03-25T08:46:17.992Z", "text": "1. iterables\r\n2. list\r\n3. loops"}}, {"model": "logs.entry", "pk": 10, "fields": {"topic": 1, "date_added": "2019-03-25T08:49:36.065Z", "text": "1. Git review\r\n$ chsh *change shell\r\n\r\n$ git remote add <name of the remote> <http://....>  \r\n  *each remote (repository on github) has many branches and a master branch\r\n\r\n$ gst (in zshell = git status)\r\n\r\nwe can put what we don't need ot push to github in *.gitignore file\r\n\r\n$ git config --global * there are some configuration files in your pc holding information of your email and passport\r\n\r\n$ history *shows the history of the command you used.\r\n\r\n**git init** --> make changes --> **git add <file_name>** --> **git commit -m \"commit message\"** --> **git push <remote-name> master \r\n\r\n**git pull python-onsite everyday!\r\n**git push crashcourse everyday! The crash course book\r\n\r\n**git clone http://...** This will generate a folder automatically\r\n*git branch -a \r\n*git branch -v\r\n*git log\r\n\r\ncreate a git branch and push to the branch\r\n$ git push salt_remote caden_db_feature (what you are pushing: remote and branch name)"}}, {"model": "logs.entry", "pk": 11, "fields": {"topic": 3, "date_added": "2019-03-25T11:01:46.727Z", "text": "#### Function\r\n\r\n1. if there is no *Return statement*, there will be a default \"None\"\r\n2. if a variable is defined inside a function and not returned, it can't be used outside. \r\n3. if you just key in the name of the function, nothing happens becuase it's a defined function.\r\n4. functionname.__call__() is functionname()\r\n\r\n```\r\ndef my_func(parameter1, parameter2, etc):\r\n\r\n    '''docstring'''\r\n  \r\n    something here\r\n  \r\n    return ....\r\n```\r\nparameter1 and parameter2 are positional argument\r\n*args: a list with unknown length. also an optional arguments (* means create a list and collect key words)\r\n**kwargs: a dictionary with unknown length. (** means create a dictionary and collect keywords)\r\nThere is a fixed way to pass the keywords arguments, key can't be expressions!\r\n\r\nRecurssive. \r\n\r\nan empty list: l = [] has the value [], but bool(l) = False\r\n\r\n**from** module_name **import** function_name/class_name **any name"}}, {"model": "logs.entry", "pk": 12, "fields": {"topic": 6, "date_added": "2019-03-25T11:08:21.173Z", "text": "MVC: model view (HTML, static pages/templates/styles) controler (code logics)\r\n  *in Django: MTV(model template views) = MVC (model view controler)\r\n  ORM: object relational mapper\r\n  \r\n  Mostly a backend frame work, make things run on the server-side; while front end run on the client-side.\r\n  Lots of display related to FE. \r\n \r\n Building different logics in different apps under one project. \r\n \r\n What do we want to do with LEARNING LOGS:\r\n 1. log learning progress\r\n 2. for multiple topics\r\n 3. multiple entries for each topic\r\n \r\n Tbl1. Topics: id(primary key), topic, descr, date_added, \r\n Tbl2. Entries: id(primary key), id_topic(foregin key), text, date_added\r\n \r\n db.sqlites3 is just a tile not an entire database.\r\n \r\n 1. create a new project (venv)\r\n 2. install django package in the virtual environment: $ pip install django\r\n 3. create a requirements file: $ pip freeze > requirements.txt\r\n 4. create a project in the current folder: **$ django-admin startproject learning_log .**\r\n 5. hide secret_key inside secrets.py; $ from secret import secret_key \r\n 6. put inside .gitigore: \r\n ```secrets.py\r\n    venv\r\n    .idea\r\n    __pycache__\r\n ```\r\n 7. create the database file which holds the default files: **$ python manage.py migrate\r\n 8. simulate another server to connect with our computer: **$ python manage.py runserver\r\n 9. create a superuser: $ python manage.py createsuperuser\r\n 10. now we can go to our website to login as superuser: http://127.0.0.1:8000/admin/\r\n 11. Create a README.md file and $ git add README.md\r\n 12. $ git init / $ git commit -m \"initial commit to create learning_log\"\r\n 13. create a logs folder (a django app in current project): **$ python manage.py startapp logs\r\n 14. add ```\"logs\",``` inside INSTALLED_APPS under learning_log/settings.py\r\n 15. create our two tables by defining new classes in logs/models.py, inheritates from models.Model\r\n ```\r\nfrom .models import Topic\r\nfrom .models import Entry\r\n\r\n# Register your models here.\r\nadmin.site.register(Topic)\r\nadmin.site.register(Entry)\r\n```\r\n16. The following codes imports the model we want to register Topic, and then uses admin.site.register() to tell Django to manage our model through the admin site.\r\n 17. we\u2019ll follow these three steps: modify models.py, call makemigrations on learning_logs, and tell Django to migrate the project.\r\n The command makemigrations tells Django to figure out how to modify the database so it can store the data associated with any new models we\u2019ve defined.\r\n **$ python manage.py makemigrations\r\n **$ python manage.py migrate\r\n **$ python manage.py sqlmigrate logs 0001\r\n \r\n In Django, Meta is just used to pass information into the process of creating the _meta Options object. Django's Model class specifically handles having an attribute named Meta which is a class. It's not a general Python thing.\r\n https://docs.djangoproject.com/en/2.1/ref/models/options/"}}, {"model": "logs.entry", "pk": 13, "fields": {"topic": 5, "date_added": "2019-03-25T11:09:01.384Z", "text": "SQL & RDBMS (i.e. MS Access, SQL Server, MySQL)\r\nrelational database Vs. non-relational database(mongoDB)\r\n1. clear table structure Vs. documents\r\n2. primary key\r\n\r\nquery return a result set. \r\nsyntax\r\n```\r\nINSERT INTO table_name (column1, column2, column3, ...)\r\nVALUES (value1, value2, value3, ...);\r\n\r\nUPDATE table_name\r\nSET column1 = value1, column2 = value2, ...\r\nWHERE condition;\r\n\r\nDELETE FROM table_name WHERE condition;\r\n\r\nCREATE TABLE table_name (\r\n    column1 datatype,\r\n    column2 datatype,\r\n    column3 datatype,\r\n   ....\r\n);\r\n\r\nDROP TABLE Shippers;\r\n\r\nALTER TABLE table_name\r\nADD column_name datatype;\r\n```\r\n\r\njoin & conditions\r\n ```\r\n SELECT column_name(s)\r\nFROM table_name\r\nWHERE condition\r\nGROUP BY column_name(s)\r\nORDER BY column_name(s);\r\n```\r\n\r\nmaking connection to the postgres DB, which sit on my PC.\r\n```$ psql``` then we get out by \\q \r\n```$ psql -U postgres``` look at the user: \\du, or \\?\r\n\\l: list of all the DB\r\n\\c dvdrental: connecting to a DB called dvdrental.\r\n\\dt: list of tables in the DB\r\n\\q: quit this ps command line\r\n\\?: help with the command line\r\n\r\n```dvdrental=# SELECT ...```Inside the DB, we can make sql queries."}}, {"model": "logs.entry", "pk": 14, "fields": {"topic": 5, "date_added": "2019-03-25T11:10:51.135Z", "text": "Web stuff\r\n\r\nweb scraping: download webpages\r\nweb crawling: going through links automatically\r\nweb parsing: after scraping, taking out info needed\r\n\r\n4 common HTTP methods:\r\n.get() : asking for something\r\n.post() : handing over something and asking for something\r\n.delete : get rid of something from the server\r\n.put : editing things on the server (update)"}}, {"model": "logs.entry", "pk": 15, "fields": {"topic": 5, "date_added": "2019-03-25T11:11:17.125Z", "text": "in firefox type: ```file:/// localhost/ = 127.0.0.1``` will direct to root directory\r\nURL: Uniform Resource Locator\r\nfile://127.0.0.0 or 127.0.0.1\r\nhttp:// hyper text transfer protocol\r\nftp:// \r\ndomain name(address of the computer, the server you are connected to): e.g. www.google.com\r\nthen a path like \"/home\" for example is walking through a file system\r\n\r\n***protocol://domain_name/path***\r\n\r\nDNS: domain name system translate the name of the computer to an IP address (long numbers)\r\n\r\n ```ping www.wikipedia.org```\r\nwww.wikipedia.org (103.102.166.224): 56 data bytes"}}, {"model": "logs.entry", "pk": 16, "fields": {"topic": 4, "date_added": "2019-03-25T11:11:34.851Z", "text": "CSS and HTML are languages but not a programing language\r\nbootstrap is a framework in CSS.\r\n\r\nbootstrap(https://getbootstrap.com/docs/4.3/getting-started/download/) \r\n1.mobile-first responsive design\r\n2.easy styling\r\n\r\nsome elements don't have closing tag: link, meta, img\r\n\r\nTo link a style.css: <link rel=\"stylesheet\" href=\"style.css\"> in side of <head> </head>\r\n\r\nIn CSS: start with a selector, followed by { } in side which property: value;\r\n``` p{\r\n       color:red;\r\n}\r\n\r\n.highlight{color:red;\r\n}\r\n\r\nhightlight > p {color:red;\r\n}\r\n```\r\naddress all the p child element in highlight class\r\n\r\nGrid System Rules in Bootstrap:\r\n\r\nRows must be placed within a .container (fixed-width) or .container-fluid (full-width) for proper alignment and padding\r\nUse rows to create horizontal groups of columns\r\nContent should be placed within columns, and only columns may be immediate children of rows\r\nPredefined classes like .row and .col-sm-4 are available for quickly making grid layouts\r\nColumns create gutters (gaps between column content) via padding. That padding is offset in rows for the first and last column via negative margin on .rows\r\nGrid columns are created by specifying the number of 12 available columns you wish to span. For example, three equal columns would use three .col-sm-4\r\nColumn widths are in percentage, so they are always fluid and sized relative to their parent element"}}, {"model": "logs.entry", "pk": 17, "fields": {"topic": 11, "date_added": "2019-03-27T12:57:28.153Z", "text": "Java group/Nick favorite: CP Lounge"}}, {"model": "logs.entry", "pk": 18, "fields": {"topic": 13, "date_added": "2019-03-29T01:03:53.893Z", "text": "Travel advisor\r\n\r\nuser input: criteria\r\noutput: suggestions of top 3 destinations"}}, {"model": "logs.link", "pk": 1, "fields": {"topic": 4, "date_added": "2019-03-26T09:08:36.919Z", "link": "https://www.w3schools.com/html/", "comment": "w3 school has some easy-to-follow materials on HTML"}}, {"model": "logs.link", "pk": 2, "fields": {"topic": 6, "date_added": "2019-03-26T09:10:35.242Z", "link": "https://djangobook.com/mdj2-django-structure/", "comment": "Djangobook has some good overviews"}}, {"model": "logs.link", "pk": 3, "fields": {"topic": 5, "date_added": "2019-03-26T09:11:26.118Z", "link": "http://www.postgresqltutorial.com/psql-commands/", "comment": "useful commands for postgres which are not easy to remember"}}, {"model": "logs.link", "pk": 4, "fields": {"topic": 2, "date_added": "2019-03-26T09:12:08.102Z", "link": "https://pypi.org", "comment": "To install Python packages"}}, {"model": "logs.link", "pk": 5, "fields": {"topic": 4, "date_added": "2019-03-26T09:24:52.889Z", "link": "https://www.w3schools.com/css/default.asp", "comment": "w3 school has some very easy-to-follow information on CSS\r\n\r\nhttps://www.w3schools.com/bootstrap4/default.asp"}}, {"model": "logs.link", "pk": 6, "fields": {"topic": 4, "date_added": "2019-03-26T09:25:15.473Z", "link": "https://www.w3schools.com/bootstrap4/default.asp", "comment": "w3 school has some very easy-to-follow information on Bootstrap (3 and 4)"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add user", "content_type": 4, "codename": "add_user"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change user", "content_type": 4, "codename": "change_user"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete user", "content_type": 4, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view user", "content_type": 4, "codename": "view_user"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add content type", "content_type": 5, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change content type", "content_type": 5, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete content type", "content_type": 5, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view content type", "content_type": 5, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add session", "content_type": 6, "codename": "add_session"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change session", "content_type": 6, "codename": "change_session"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete session", "content_type": 6, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view session", "content_type": 6, "codename": "view_session"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add entry", "content_type": 7, "codename": "add_entry"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change entry", "content_type": 7, "codename": "change_entry"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete entry", "content_type": 7, "codename": "delete_entry"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view entry", "content_type": 7, "codename": "view_entry"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add topic", "content_type": 8, "codename": "add_topic"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change topic", "content_type": 8, "codename": "change_topic"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete topic", "content_type": 8, "codename": "delete_topic"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view topic", "content_type": 8, "codename": "view_topic"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can add link", "content_type": 9, "codename": "add_link"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can change link", "content_type": 9, "codename": "change_link"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can delete link", "content_type": 9, "codename": "delete_link"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can view link", "content_type": 9, "codename": "view_link"}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$120000$6qnteDGuiynw$VrvMLo83Jgvvz5g0i6LUHSfAbXBPoOmm/SbDojXAaWE=", "last_login": "2019-03-25T07:49:37.645Z", "is_superuser": true, "username": "ming", "first_name": "", "last_name": "", "email": "", "is_staff": true, "is_active": true, "date_joined": "2019-03-25T03:07:21.905Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 2, "fields": {"password": "pbkdf2_sha256$120000$QwqvMlpu04hk$hpV9xb15rTzughTHXrHXy9HEsiJmHO6a75Gozr89T2s=", "last_login": "2019-03-28T06:29:25.460Z", "is_superuser": true, "username": "mingy", "first_name": "", "last_name": "", "email": "j.yanming@gmail.com", "is_staff": true, "is_active": true, "date_joined": "2019-03-26T07:52:59.748Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 3, "fields": {"password": "pbkdf2_sha256$120000$Ja2Tlh7V9imx$HoQsSaAIy5OU8leYl8J+MjImvWSmWbZ+F3k8gvhRfL8=", "last_login": null, "is_superuser": false, "username": "Martin", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2019-03-29T00:55:06.154Z", "groups": [], "user_permissions": []}}, {"model": "auth.user", "pk": 4, "fields": {"password": "pbkdf2_sha256$120000$t89HfVcenfUR$oQc/ZQCCySZ9W7zs5GodXx+hTfndljr07pUIAbbFnkU=", "last_login": "2019-03-29T01:02:15.180Z", "is_superuser": false, "username": "Michael", "first_name": "", "last_name": "", "email": "", "is_staff": false, "is_active": true, "date_joined": "2019-03-29T01:02:14.867Z", "groups": [], "user_permissions": []}}, {"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2019-03-25T07:51:22.818Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "Week1 - CLI/Git/Github", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2019-03-25T07:51:41.146Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "Week2 - Python Class", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2019-03-25T07:51:46.149Z", "user": 1, "content_type": 8, "object_id": "3", "object_repr": "Week 3", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2019-03-25T07:51:50.658Z", "user": 1, "content_type": 8, "object_id": "4", "object_repr": "Week 4", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2019-03-25T07:52:11.444Z", "user": 1, "content_type": 8, "object_id": "5", "object_repr": "Week 5 - postgres/SQL/API", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2019-03-25T07:52:25.749Z", "user": 1, "content_type": 8, "object_id": "4", "object_repr": "Week 4 - HTML/CSS/Bootstrap", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"title\"]}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2019-03-25T07:52:38.271Z", "user": 1, "content_type": 8, "object_id": "3", "object_repr": "Week 3 - More Python", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"title\"]}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2019-03-25T07:52:47.192Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "Week 2 - Python Class", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"title\"]}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2019-03-25T07:52:52.582Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "Week 1 - CLI/Git/Github", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"title\"]}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2019-03-25T07:53:00.596Z", "user": 1, "content_type": 8, "object_id": "6", "object_repr": "Week 6 - Django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2019-03-25T07:54:21.023Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "** Command Lines **\r\n\r\n*go to directory*\r\n\r\n$ cd ~...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2019-03-25T07:54:35.713Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "Terminal\r\n** Command Lines **\r\n\r\n*go to directory*...", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"text\"]}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2019-03-25T07:55:14.168Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "working with vim\r\n\r\n$ vim <file_name>\r\n\r\nenter \"i\"...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2019-03-25T07:55:36.962Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "*To write an terminal exec file, start with this l...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2019-03-25T07:55:48.224Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "Terminal\r\n** Command Lines **\r\n\r\n*go to directory*...", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2019-03-25T07:56:13.363Z", "user": 1, "content_type": 7, "object_id": "4", "object_repr": "**2. Git & GitHub**\r\n\r\n$ git init\r\n\r\n$ git status\r...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2019-03-25T07:56:26.370Z", "user": 1, "content_type": 7, "object_id": "4", "object_repr": "**Git & GitHub**\r\n\r\n$ git init\r\n\r\n$ git status\r\n\r\n...", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"text\"]}}]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2019-03-25T07:57:19.846Z", "user": 1, "content_type": 7, "object_id": "4", "object_repr": "**Git & GitHub**\r\n\r\n$ git init\r\n\r\n$ git status\r\n\r\n...", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"text\"]}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2019-03-25T07:58:21.214Z", "user": 1, "content_type": 7, "object_id": "5", "object_repr": "PyCharm\r\n\r\nPyCharm: *have project structure, pytho...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2019-03-25T07:59:06.113Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "Week 2 - Python Basics", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"title\"]}}]"}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2019-03-25T07:59:16.781Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "Week 2 - Python Basics", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2019-03-25T08:18:54.185Z", "user": 1, "content_type": 8, "object_id": "7", "object_repr": "Ubud - Yoga", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2019-03-25T08:19:02.176Z", "user": 1, "content_type": 8, "object_id": "8", "object_repr": "Ubud - Restaurant", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2019-03-25T08:19:23.271Z", "user": 1, "content_type": 7, "object_id": "6", "object_repr": "1. Yoga Center\r\n2. Yoga Barn...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2019-03-25T08:19:53.043Z", "user": 1, "content_type": 7, "object_id": "7", "object_repr": "1. Sage\r\n2. Mama Warung\r\n3. Mother...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2019-03-25T08:27:56.470Z", "user": 1, "content_type": 7, "object_id": "7", "object_repr": "Vegan\r\n\r\n1. Sage\r\n2. Mother...", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"text\"]}}]"}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2019-03-25T08:30:47.666Z", "user": 1, "content_type": 7, "object_id": "8", "object_repr": "Cheap Places\r\n1. Mama Warung\r\n2. Bridge Padang\r\n3....", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2019-03-25T08:46:17.995Z", "user": 1, "content_type": 7, "object_id": "9", "object_repr": "1. iterables\r\n2. list\r\n3. loops...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2019-03-25T08:49:36.066Z", "user": 1, "content_type": 7, "object_id": "10", "object_repr": "1. Git review\r\n$ chsh *change shell\r\n\r\n$ git remot...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2019-03-25T08:50:32.920Z", "user": 1, "content_type": 8, "object_id": "9", "object_repr": "Ubud - Trips", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2019-03-25T08:50:44.262Z", "user": 1, "content_type": 8, "object_id": "10", "object_repr": "Resources", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2019-03-25T11:00:30.117Z", "user": 1, "content_type": 7, "object_id": "5", "object_repr": "PyCharm\r\n\r\nPyCharm: *have project structure, pytho...", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2019-03-25T11:01:46.728Z", "user": 1, "content_type": 7, "object_id": "11", "object_repr": "#### Function\r\n\r\n1. if there is no *Return stateme...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2019-03-25T11:01:59.240Z", "user": 1, "content_type": 7, "object_id": "11", "object_repr": "#### Function\r\n\r\n1. if there is no *Return stateme...", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"topic_id\"]}}]"}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2019-03-25T11:08:21.176Z", "user": 1, "content_type": 7, "object_id": "12", "object_repr": "MVC: model view (HTML, static pages/templates/styl...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2019-03-25T11:09:01.385Z", "user": 1, "content_type": 7, "object_id": "13", "object_repr": "SQL & RDBMS (i.e. MS Access, SQL Server, MySQL)\r\nr...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2019-03-25T11:10:51.138Z", "user": 1, "content_type": 7, "object_id": "14", "object_repr": "Web stuff\r\n\r\nweb scraping: download webpages\r\nweb ...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2019-03-25T11:11:17.126Z", "user": 1, "content_type": 7, "object_id": "15", "object_repr": "in firefox type: ```file:/// localhost/ = 127.0.0....", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2019-03-25T11:11:34.852Z", "user": 1, "content_type": 7, "object_id": "16", "object_repr": "CSS and HTML are languages but not a programing la...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2019-03-26T09:08:36.921Z", "user": 2, "content_type": 9, "object_id": "1", "object_repr": "w3 school has some e...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2019-03-26T09:10:35.243Z", "user": 2, "content_type": 9, "object_id": "2", "object_repr": "Djangobook has some ...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 42, "fields": {"action_time": "2019-03-26T09:11:26.120Z", "user": 2, "content_type": 9, "object_id": "3", "object_repr": "useful commands for ...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 43, "fields": {"action_time": "2019-03-26T09:12:08.103Z", "user": 2, "content_type": 9, "object_id": "4", "object_repr": "To install Python pa...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 44, "fields": {"action_time": "2019-03-26T09:24:11.897Z", "user": 2, "content_type": 9, "object_id": "1", "object_repr": "https://www.w3schools.com/html/...", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"link\", \"comment\"]}}]"}}, {"model": "admin.logentry", "pk": 45, "fields": {"action_time": "2019-03-26T09:24:52.890Z", "user": 2, "content_type": 9, "object_id": "5", "object_repr": "https://www.w3schools.com/css/default.asp...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 46, "fields": {"action_time": "2019-03-26T09:25:15.474Z", "user": 2, "content_type": 9, "object_id": "6", "object_repr": "https://www.w3schools.com/bootstrap4/default.asp...", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}]